/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.connecthub;

import java.awt.Image;
import java.io.File;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author nouri
 */
public class AdminGroupProfile extends javax.swing.JFrame {

    Group group;
    ArrayList<Group> groups;
    ArrayList<User> requests;
    ArrayList<GroupPost> groupPost;
    ArrayList<User> members;
    ArrayList<User> admins;

    /**
     * Creates new form GroupProfile
     */
    public AdminGroupProfile(Group group) {
        initComponents();
        this.group = group;
        groups = GroupDatabase.readGroups();
        groupNameLabel.setText(group.getName());
        descriptionLabel.setText(group.getDescription());
        Loadpfp();
        requests = MembershipRequestDatabase.getGroupMembershipRequests(group.getGroupId());
        groupPost = GroupPostDatabase.readPostsforGroup(group.getGroupId());
        members = GroupDatabase.readGroupMembers(group.getGroupId());
        admins = GroupDatabase.readGroupAdmins(group.getGroupId());
        loadMembershipRequests();
        LoadGroupPosts();
        loadMembers();
        loadAdmins();
    }

    public void LoadGroupPosts() {
        //view posts in postsList
        DefaultListModel<String> listModel = new DefaultListModel<>();

        for (GroupPost post : groupPost) {
            listModel.addElement(post.getContent());
        }
        postsList.setModel(listModel);
    }

    public void Loadpfp() {
        String filepath = null;
        for (int i = 0; i < groups.size(); i++) {
            if (groups.get(i).getGroupId() == group.getGroupId()) {
                filepath = groups.get(i).getGroupPhoto();
            }
        }

        if (filepath != null) {
            ImageIcon profilePicture = new ImageIcon(filepath);
            Image pfp = profilePicture.getImage();
            Image scaledPFP = pfp.getScaledInstance(300, 200, Image.SCALE_SMOOTH);
            ImageIcon scaledIcon = new ImageIcon(scaledPFP);
            groupPhotoLabel.setIcon(scaledIcon);
        }

    }

    public void loadMembershipRequests() {
        DefaultListModel<String> model = new DefaultListModel<>();
        for (User user : requests) {
            model.addElement(user.getUsername());
        }

        membershipRequestsList.setModel(model);
    }

    public void loadMembers() {
        DefaultListModel<String> model = new DefaultListModel<>();
        for (User user : members) {
            model.addElement(user.getUsername());
        }

        membersList.setModel(model);
    }

    public void loadAdmins() {
        DefaultListModel<String> model = new DefaultListModel<>();
        for (User user : admins) {
            model.addElement(user.getUsername());
        }

        adminsList.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        groupPhotoLabel = new javax.swing.JLabel();
        groupNameLabel = new javax.swing.JLabel();
        descriptionLabel = new javax.swing.JLabel();
        deleteGroupButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        postsList = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        membersList = new javax.swing.JList<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        membershipRequestsList = new javax.swing.JList<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        adminsList = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        demoteAdminsButton = new javax.swing.JButton();
        promoteMembersButton = new javax.swing.JButton();
        removeAdminsButton = new javax.swing.JButton();
        removeMembersButton = new javax.swing.JButton();
        addPostButton = new javax.swing.JButton();
        editPostButton = new javax.swing.JButton();
        deletePostButton = new javax.swing.JButton();
        approveMemberButton = new javax.swing.JButton();
        declineMemberButton = new javax.swing.JButton();
        changePhotoButton = new javax.swing.JButton();
        viewPostButton = new javax.swing.JButton();
        showMembersButton = new javax.swing.JButton();
        showAdminsButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Admin group profile");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        groupPhotoLabel.setBackground(new java.awt.Color(255, 255, 255));
        groupPhotoLabel.setOpaque(true);

        groupNameLabel.setOpaque(true);

        descriptionLabel.setOpaque(true);

        deleteGroupButton.setBackground(new java.awt.Color(51, 153, 255));
        deleteGroupButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteGroupButton.setText("Delete Group");
        deleteGroupButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteGroupButtonActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(postsList);

        jScrollPane2.setViewportView(membersList);

        jScrollPane4.setViewportView(membershipRequestsList);

        jScrollPane5.setViewportView(adminsList);

        jLabel2.setText("Members");

        jLabel3.setText("Admins");

        jLabel4.setText("Membership Requests");

        jLabel5.setText("Posts");

        demoteAdminsButton.setBackground(new java.awt.Color(51, 153, 255));
        demoteAdminsButton.setForeground(new java.awt.Color(255, 255, 255));
        demoteAdminsButton.setText("Demote");
        demoteAdminsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                demoteAdminsButtonActionPerformed(evt);
            }
        });

        promoteMembersButton.setBackground(new java.awt.Color(51, 153, 255));
        promoteMembersButton.setForeground(new java.awt.Color(255, 255, 255));
        promoteMembersButton.setText("Promote");
        promoteMembersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                promoteMembersButtonActionPerformed(evt);
            }
        });

        removeAdminsButton.setBackground(new java.awt.Color(51, 153, 255));
        removeAdminsButton.setForeground(new java.awt.Color(255, 255, 255));
        removeAdminsButton.setText("Remove");
        removeAdminsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeAdminsButtonActionPerformed(evt);
            }
        });

        removeMembersButton.setBackground(new java.awt.Color(51, 153, 255));
        removeMembersButton.setForeground(new java.awt.Color(255, 255, 255));
        removeMembersButton.setText("Remove");
        removeMembersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeMembersButtonActionPerformed(evt);
            }
        });

        addPostButton.setBackground(new java.awt.Color(51, 153, 255));
        addPostButton.setForeground(new java.awt.Color(255, 255, 255));
        addPostButton.setText("Add");
        addPostButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPostButtonActionPerformed(evt);
            }
        });

        editPostButton.setBackground(new java.awt.Color(51, 153, 255));
        editPostButton.setForeground(new java.awt.Color(255, 255, 255));
        editPostButton.setText("Edit");
        editPostButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editPostButtonActionPerformed(evt);
            }
        });

        deletePostButton.setBackground(new java.awt.Color(51, 153, 255));
        deletePostButton.setForeground(new java.awt.Color(255, 255, 255));
        deletePostButton.setText("Delete");
        deletePostButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletePostButtonActionPerformed(evt);
            }
        });

        approveMemberButton.setBackground(new java.awt.Color(51, 153, 255));
        approveMemberButton.setForeground(new java.awt.Color(255, 255, 255));
        approveMemberButton.setText("Approve");
        approveMemberButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approveMemberButtonActionPerformed(evt);
            }
        });

        declineMemberButton.setBackground(new java.awt.Color(51, 153, 255));
        declineMemberButton.setForeground(new java.awt.Color(255, 255, 255));
        declineMemberButton.setText("Decline");
        declineMemberButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                declineMemberButtonActionPerformed(evt);
            }
        });

        changePhotoButton.setBackground(new java.awt.Color(51, 153, 255));
        changePhotoButton.setForeground(new java.awt.Color(255, 255, 255));
        changePhotoButton.setText("Change Photo");
        changePhotoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changePhotoButtonActionPerformed(evt);
            }
        });

        viewPostButton.setBackground(new java.awt.Color(51, 153, 255));
        viewPostButton.setForeground(new java.awt.Color(255, 255, 255));
        viewPostButton.setText("View");
        viewPostButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewPostButtonActionPerformed(evt);
            }
        });

        showMembersButton.setBackground(new java.awt.Color(51, 153, 255));
        showMembersButton.setForeground(new java.awt.Color(255, 255, 255));
        showMembersButton.setText("Show");
        showMembersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showMembersButtonActionPerformed(evt);
            }
        });

        showAdminsButton.setBackground(new java.awt.Color(51, 153, 255));
        showAdminsButton.setForeground(new java.awt.Color(255, 255, 255));
        showAdminsButton.setText("Show");
        showAdminsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showAdminsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(groupNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(groupPhotoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(changePhotoButton)
                            .addComponent(descriptionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(33, 33, 33)
                                .addComponent(showAdminsButton))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(demoteAdminsButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(removeAdminsButton))
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(promoteMembersButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(removeMembersButton))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(showMembersButton)
                                .addGap(4, 4, 4))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addPostButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(editPostButton, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(deleteGroupButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(deletePostButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(viewPostButton, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE))))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(approveMemberButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(declineMemberButton))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(54, 54, 54))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(showMembersButton)
                    .addComponent(showAdminsButton))
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(groupNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(groupPhotoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(changePhotoButton)
                        .addGap(18, 18, 18)
                        .addComponent(descriptionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(deleteGroupButton)
                        .addGap(29, 29, 29))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(addPostButton)
                                .addGap(5, 5, 5)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(demoteAdminsButton)
                                    .addComponent(promoteMembersButton)
                                    .addComponent(removeAdminsButton)
                                    .addComponent(removeMembersButton)
                                    .addComponent(approveMemberButton)
                                    .addComponent(declineMemberButton)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(editPostButton)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deletePostButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(viewPostButton)
                        .addGap(17, 17, 17))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void deletePostButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletePostButtonActionPerformed
        int selectedIndex = postsList.getSelectedIndex();
        if (selectedIndex == -1) {
            JOptionPane.showMessageDialog(this, "Please select a post to delete");
            return;
        }

        ArrayList<GroupPost> groupPosts = GroupPostDatabase.readGroupPosts();

        int confirmation = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this post?", "Confirm Delete", JOptionPane.YES_NO_OPTION);

        if (confirmation == JOptionPane.YES_OPTION) {
            groupPosts.remove(selectedIndex);
            GroupPostDatabase.savePostsForGroup(groupPosts);

            DefaultListModel<String> listModel = (DefaultListModel<String>) postsList.getModel();
            listModel.remove(selectedIndex);
            postsList.setModel(listModel);

            JOptionPane.showMessageDialog(this, "Post deleted successfully");

            AdminGroupProfile adminGroupProfile = new AdminGroupProfile(group);
            adminGroupProfile.setVisible(true);
            this.setVisible(false);

        }
    }//GEN-LAST:event_deletePostButtonActionPerformed

    private void declineMemberButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_declineMemberButtonActionPerformed
        String selectedRequest = membershipRequestsList.getSelectedValue();
        if (selectedRequest != null) {
            ArrayList<User> allUsers = UsersDatabase.readUsers();
            ArrayList<Group> allGroups = GroupDatabase.readGroups();

            for (Group group : allGroups) {
                if (group.getName().equals(this.group.getName())) {
                    for (User user : allUsers) {
                        if (selectedRequest.equals(user.getUsername())) {

                            MembershipRequestDatabase.removeMembershipRequestFromFile(group.getGroupId(), user.getUserId());

                            DefaultListModel<String> listModel = (DefaultListModel<String>) membershipRequestsList.getModel();
                            listModel.removeElement(selectedRequest);
                            break;
                        }
                    }
                }
            }
        }

    }//GEN-LAST:event_declineMemberButtonActionPerformed

    private void changePhotoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changePhotoButtonActionPerformed

        JFileChooser file = new JFileChooser();
        int value = file.showOpenDialog(this);
        if (value == JFileChooser.APPROVE_OPTION) {
            File f = file.getSelectedFile();
            //String newPath = f.getAbsolutePath();
            //this.group.setGroupPhoto(newPath);
            GroupEditing g = new GroupEditing();
            ImageIcon scaledIcon = g.changePFP(f, group);
            groupPhotoLabel.setIcon(scaledIcon);
        }

    }//GEN-LAST:event_changePhotoButtonActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        GroupManagementWindow groupManagementWindow = new GroupManagementWindow();
        groupManagementWindow.setVisible(true);
    }//GEN-LAST:event_formWindowClosed

    private void approveMemberButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approveMemberButtonActionPerformed
        ArrayList<Group> allGroups = GroupDatabase.readGroups();
        ArrayList<GroupActivitiesNotification> notifications = GroupActivitiesNotificationDatabase.readGroupNotifications();
        String selectedRequest = membershipRequestsList.getSelectedValue();
        if (selectedRequest != null) {
            for (Group group : allGroups) {
                if (group.getName().equals(this.group.getName())) {
                    ArrayList<User> allUsers = UsersDatabase.readUsers();

                    for (User user : allUsers) {
                        if (selectedRequest.equals(user.getUsername())) {
                            group.getMembers().add(user);

                            GroupDatabase.saveGroups(allGroups);

                            MembershipRequestDatabase.removeMembershipRequestFromFile(group.getGroupId(), user.getUserId());

                            GroupActivitiesNotification notification = GroupActivitiesNotificationDatabase.sendGroupNotification(user.getUserId(), group.getGroupId());
                            notifications.add(notification);
                            GroupActivitiesNotificationDatabase.saveGroupNotifications(notifications);

                            DefaultListModel<String> listModel = (DefaultListModel<String>) membershipRequestsList.getModel();
                            listModel.removeElement(selectedRequest);
                            membershipRequestsList.setModel(listModel);
                            break;
                        }
                    }
                }
            }
        }    }//GEN-LAST:event_approveMemberButtonActionPerformed

    private void addPostButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPostButtonActionPerformed
        GroupPostsCreationWindow groupPostsCreationWindow = new GroupPostsCreationWindow(group);
        groupPostsCreationWindow.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_addPostButtonActionPerformed

    private void editPostButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editPostButtonActionPerformed
        int selectedIndex = postsList.getSelectedIndex();
        if (selectedIndex != -1) {
            GroupPost selectedPost = groupPost.get(selectedIndex);

            EditGroupPostWindow editWindow = new EditGroupPostWindow(selectedPost, group);
            editWindow.setVisible(true);
            this.setVisible(false);
        } else {
            JOptionPane.showMessageDialog(this, "Please select a post to edit.");
        }

    }//GEN-LAST:event_editPostButtonActionPerformed

    private void removeMembersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeMembersButtonActionPerformed
        int selectedIndex = membersList.getSelectedIndex();
        if (selectedIndex != -1) {
            User user = members.get(selectedIndex);
            GroupDatabase.removeMember(group.getGroupId(), user.getUsername());
            DefaultListModel<String> listModel = (DefaultListModel<String>) membersList.getModel();
            listModel.removeElementAt(selectedIndex);
            membersList.setModel(listModel);
            
        } else {
            JOptionPane.showMessageDialog(this, "Please select a member to remove.");
        }

    }//GEN-LAST:event_removeMembersButtonActionPerformed

    private void promoteMembersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_promoteMembersButtonActionPerformed
        int selectedIndex = membersList.getSelectedIndex();
        User primaryUser = Functionalities.getUser(group.getPrimaryAdmin());
        if (Functionalities.currentUser.getUserId() == primaryUser.getUserId()) {
            if (selectedIndex != -1) {
                User user = members.get(selectedIndex);
                GroupDatabase.promoteToAdmin(group.getGroupId(), user.getUsername());
                DefaultListModel<String> listModel = (DefaultListModel<String>) membersList.getModel();
                listModel.removeElementAt(selectedIndex);
                membersList.setModel(listModel);
                
            } else {
                JOptionPane.showMessageDialog(this, "Please select a member to promote.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Only Primary Admins can promote members");

        }
    }//GEN-LAST:event_promoteMembersButtonActionPerformed

    private void removeAdminsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeAdminsButtonActionPerformed
        int selectedIndex = adminsList.getSelectedIndex();
        User primaryUser = Functionalities.getUser(group.getPrimaryAdmin());
        if (Functionalities.currentUser.getUserId() == primaryUser.getUserId()) {
            if (selectedIndex != -1) {
                User user = admins.get(selectedIndex);
                GroupDatabase.removeAdmin(group.getGroupId(), user.getUsername());
                DefaultListModel<String> listModel = (DefaultListModel<String>) adminsList.getModel();
                listModel.removeElementAt(selectedIndex);
                adminsList.setModel(listModel);
            } else {
                JOptionPane.showMessageDialog(this, "Please select an admin to remove.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Only Primary Admins can remove Admins");

        }
    }//GEN-LAST:event_removeAdminsButtonActionPerformed

    private void demoteAdminsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_demoteAdminsButtonActionPerformed
        int selectedIndex = adminsList.getSelectedIndex();
        User primaryUser = Functionalities.getUser(group.getPrimaryAdmin());
        if (Functionalities.currentUser.getUserId() == primaryUser.getUserId()) {
            if (selectedIndex != -1) {
                User user = admins.get(selectedIndex);
                GroupDatabase.demoteAdmin(group.getGroupId(), user.getUsername());
                DefaultListModel<String> listModel = (DefaultListModel<String>) adminsList.getModel();
                listModel.removeElementAt(selectedIndex);
                adminsList.setModel(listModel);
            } else {
                JOptionPane.showMessageDialog(this, "Please select an admin to demote.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Only Primary Admins can demote admins");
        }

     }//GEN-LAST:event_demoteAdminsButtonActionPerformed

    private void deleteGroupButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteGroupButtonActionPerformed
        int confirmation = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this post?", "Confirm Delete", JOptionPane.YES_NO_OPTION);

        if (confirmation == JOptionPane.YES_OPTION) {
            GroupDatabase.deleteGroup(group.getGroupId());
            this.setVisible(false);
            NewsFeed newsFeed = new NewsFeed();
            newsFeed.setVisible(true);
        }
    }//GEN-LAST:event_deleteGroupButtonActionPerformed

    private void viewPostButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewPostButtonActionPerformed
        int index = postsList.getSelectedIndex();
        if (index == -1) {
            JOptionPane.showMessageDialog(this, "Choose Group Post");
        } else {
            GroupPost groupPosts = groupPost.get(index);
            this.setVisible(false);
            ViewGroupPosts view = new ViewGroupPosts(groupPosts, group);
            view.setVisible(true);
        }
    }//GEN-LAST:event_viewPostButtonActionPerformed

    private void showMembersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showMembersButtonActionPerformed
        // TODO add your handling code here:
        members = GroupDatabase.readGroupMembers(group.getGroupId());
        loadMembers();
    }//GEN-LAST:event_showMembersButtonActionPerformed

    private void showAdminsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showAdminsButtonActionPerformed
        admins = GroupDatabase.readGroupAdmins(group.getGroupId());
        loadAdmins();
    }//GEN-LAST:event_showAdminsButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addPostButton;
    private javax.swing.JList<String> adminsList;
    private javax.swing.JButton approveMemberButton;
    private javax.swing.JButton changePhotoButton;
    private javax.swing.JButton declineMemberButton;
    private javax.swing.JButton deleteGroupButton;
    private javax.swing.JButton deletePostButton;
    private javax.swing.JButton demoteAdminsButton;
    private javax.swing.JLabel descriptionLabel;
    private javax.swing.JButton editPostButton;
    private javax.swing.JLabel groupNameLabel;
    private javax.swing.JLabel groupPhotoLabel;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JList<String> membersList;
    private javax.swing.JList<String> membershipRequestsList;
    private javax.swing.JList<String> postsList;
    private javax.swing.JButton promoteMembersButton;
    private javax.swing.JButton removeAdminsButton;
    private javax.swing.JButton removeMembersButton;
    private javax.swing.JButton showAdminsButton;
    private javax.swing.JButton showMembersButton;
    private javax.swing.JButton viewPostButton;
    // End of variables declaration//GEN-END:variables
}
