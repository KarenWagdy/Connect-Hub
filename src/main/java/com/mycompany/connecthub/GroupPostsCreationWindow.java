/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.connecthub;

import java.io.File;
import java.time.LocalDateTime;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author nouri
 */
public class GroupPostsCreationWindow extends javax.swing.JFrame {

    File f1;
    Group group;

    /**
     * Creates new form GroupPostsCreationWindow
     */
    public GroupPostsCreationWindow(Group group) {
        initComponents();
        this.group = group;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        postLabel = new javax.swing.JLabel();
        postText = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        addimageButton = new javax.swing.JButton();
        postButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        postLabel.setBackground(new java.awt.Color(255, 255, 255));
        postLabel.setOpaque(true);

        postText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postTextActionPerformed(evt);
            }
        });

        jLabel2.setText("Enter Content");

        addimageButton.setBackground(new java.awt.Color(51, 153, 255));
        addimageButton.setForeground(new java.awt.Color(255, 255, 255));
        addimageButton.setText("Add Image");
        addimageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addimageButtonActionPerformed(evt);
            }
        });

        postButton.setBackground(new java.awt.Color(51, 153, 255));
        postButton.setForeground(new java.awt.Color(255, 255, 255));
        postButton.setText("Post");
        postButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(postLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(postText, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(addimageButton)
                    .addComponent(postButton, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(161, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(postLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addimageButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(postText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(postButton))
                .addGap(43, 43, 43))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void postTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postTextActionPerformed

    }//GEN-LAST:event_postTextActionPerformed

    private void addimageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addimageButtonActionPerformed
        JFileChooser file = new JFileChooser();
        int value = file.showOpenDialog(this);
        if (value == JFileChooser.APPROVE_OPTION) {
            f1 = file.getSelectedFile();
            GroupPostDatabase p = GroupPostDatabase.getInstance();
            ImageIcon scaledIcon = p.choosePostImage(f1, group);

            postLabel.setIcon(scaledIcon);
        }
    }//GEN-LAST:event_addimageButtonActionPerformed

    private void postButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postButtonActionPerformed
        GroupPost p;
        ArrayList<Notification> postNotification=AddPostNotificationDatabase.readGroupPostsNotifications(); 
        
        String xInput = postText.getText();
        if (f1 == null && xInput.equals("")) {
            JOptionPane.showMessageDialog(this, "you can not upload an empty post");
        } else {
            //check if file exists to set image path with file path or withnull
            if (f1 != null) {
                p = new GroupPost(group.getGroupId(), Functionalities.currentUser.getUserId(), xInput, f1.getAbsolutePath(), LocalDateTime.now());
            
            } else {
                p = new GroupPost(group.getGroupId(), Functionalities.currentUser.getUserId(), xInput, "null", LocalDateTime.now());

            }
            //sending notification to users
           
            
           //sending notification to primary admin
              /*  Notification n= AddPostNotificationDatabase.sendPostNotification(Functionalities.getUserId(group.getPrimaryAdmin()), group.getGroupId());
                postNotification.add(n);
                AddPostNotificationDatabase.saveGroupPostsNotifications(postNotification);
           //sending notification to admins
            for (User user : group.getAdmins()) {
                Notification notification= AddPostNotificationDatabase.sendPostNotification(user.getUserId(), group.getGroupId());
                postNotification.add(notification);
                AddPostNotificationDatabase.saveGroupPostsNotifications(postNotification);
                }*/
            
            ArrayList<GroupPost> groupPosts = GroupPostDatabase.readGroupPosts();
            groupPosts.add(p);
            GroupPostDatabase.savePostsForGroup(groupPosts);

            if (Functionalities.currentUser.getUsername().equals(group.getPrimaryAdmin())) {
                AdminGroupProfile adminGroupProfile = new AdminGroupProfile(group);
                adminGroupProfile.setVisible(true);
                this.setVisible(false);
            } else {
                for (User user : group.getAdmins()) {
                    if (user.getUserId() == Functionalities.currentUser.getUserId()) {
                        AdminGroupProfile adminGroupProfile = new AdminGroupProfile(group);
                        adminGroupProfile.setVisible(true);
                        this.setVisible(false);
                       
                    }
                }

                for (User user : group.getMembers()) {
                    if (user.getUserId() == Functionalities.currentUser.getUserId()) {
                        System.out.println("member");
                        UserGroupProfile userGroupProfile = new UserGroupProfile(group);
                        userGroupProfile.setVisible(true);
                        this.setVisible(false);
                       
                    }
                }
            }
            ArrayList<Integer> receiverIds=new ArrayList<>();
             User PrimaryAdmin=Functionalities.getUser(group.getPrimaryAdmin());
             if (PrimaryAdmin.getUserId()!=Functionalities.currentUser.getUserId()) {
                     receiverIds.add(PrimaryAdmin.getUserId());
                       }

// Add members, excluding current user
            for (User user : group.getMembers()) {
    if (user.getUserId()!=(Functionalities.currentUser.getUserId())) {
        receiverIds.add(user.getUserId());
                 }
                    }
             
             
           /*  receiverIds.add(PrimaryAdmin.getUserId());
           for (User user : group.getMembers())
           {
               if(user.getUserId()!=Functionalities.currentUser.getUserId())
               { receiverIds.add(user.getUserId());}
           }*/
           for (User user : group.getAdmins())
           {
               receiverIds.add(user.getUserId());
           }
           
          System.out.println("Receiver IDs: " + receiverIds);
            //for (User user : group.getMembers()){
                 AddPostNotification userNotification= AddPostNotificationDatabase.sendPostNotification(receiverIds, group.getGroupId());
                 userNotification.setReceiverIds(receiverIds);
                postNotification.add(userNotification);
                AddPostNotificationDatabase.saveGroupPostsNotifications(postNotification);
        }

    }//GEN-LAST:event_postButtonActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addimageButton;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton postButton;
    private javax.swing.JLabel postLabel;
    private javax.swing.JTextField postText;
    // End of variables declaration//GEN-END:variables
}
